git-commit() {
  git commit -m ${1:-'Refactor'}
}

git-add-commit() {
  git add --all
  git commit -m ${1:-'Refactor'}
}

git-add-commit-push() {
  git add --all
  git commit -m ${1:-'Refactor'}
  git push
}

git-log-graph(){
  git log --graph --pretty=format:${GIT_LOG_PRETTY_FORMAT} --abbrev-commit --max-count=${1:-10}
}

git-find-dirs() {
  # find all directories ending in .git (including hidden and ignored listings)
  fd '^.git$' $1 -HItd --max-depth 4 | sed 's/.git\/$//'
}

exec-on-git-repos() {
  local result=$(git-find-dirs $2 | fzf --reverse)
  [ ! -z "$result" ] && $1 $result
}

git-all() { ls | xargs -I{} git -C {} pull }

ghc()  { git clone git@github.com:$1 $SRC/github.com/$1; }

alias src="cd $SRC"
alias srcs="exec-on-git-repos cd $SRC"

alias hub="cd $SRC/github.com"
alias hubs="exec-on-git-repos cd $SRC/github.com/"
alias jeff="cd $SRC/github.com/jeffwindsor/"

alias dot="cd $DOTFILES"
alias in="cd $INSTALLS"

alias git-to-main="git branch -m master main && git push -u origin main"

alias ga="git add"
alias gaa="git add --all"
alias gb="git branch -v"
alias gc="git clone"
alias gcm="git-commit"
alias gcma="git add --all && git-commit"
alias gco="git checkout"
alias gd="git diff --ignore-space-at-eol -b -w --ignore-blank-lines"
alias gl="git-log-graph"
alias gll="git log"
alias gph="git push"
alias gphs="git-all pull"
alias gpl="git pull"
alias gr="git remote -vv"
alias gs="git status -sb --ignore-submodules"
alias gup="git-add-commit-push"

# sync with remote master
alias gsync="git checkout master && git pull --rebase && git checkout - && git rebase master"

# lazygit
alias lg=lazygit
alias gu=gitui
